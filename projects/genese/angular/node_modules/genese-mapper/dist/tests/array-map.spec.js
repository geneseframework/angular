import { GeneseMapper, isSameObject } from '..';
describe('GENESE MAPPER _arrayMap', function () {
    // **************************************************************************
    // Array of objects
    // **************************************************************************
    var TestClass = /** @class */ (function () {
        function TestClass() {
            this.a = 0;
        }
        return TestClass;
    }());
    var geneseMapper = new GeneseMapper(TestClass);
    describe('objects', function () {
        it('[{a: 1}, {a: 2}] => [{a: 1}, {a: 2}]', function () {
            expect(isSameObject(geneseMapper.arrayMap([{ a: 1 }, { a: 2 }]), [{ a: 1 }, { a: 2 }])).toBeTruthy();
        });
        it('[] => []', function () {
            expect(isSameObject(geneseMapper.arrayMap([]), [])).toBeTruthy();
        });
        it('null => null', function () {
            expect(isSameObject(geneseMapper.arrayMap(null), null)).toBeTruthy();
        });
        it('undefined => []', function () {
            expect(isSameObject(geneseMapper.arrayMap(undefined), [])).toBeTruthy();
        });
        it('[{a: 1}, {b: 2}] => [{a: 1}, {a: 0}]', function () {
            expect(isSameObject(geneseMapper.arrayMap([{ a: 1 }, { b: 2 }]), [{ a: 1 }, { a: 0 }])).toBeTruthy();
        });
    });
});
